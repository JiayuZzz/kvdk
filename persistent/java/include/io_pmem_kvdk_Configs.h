/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_pmem_kvdk_Configs */

#ifndef _Included_io_pmem_kvdk_Configs
#define _Included_io_pmem_kvdk_Configs
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    newConfigs
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_io_pmem_kvdk_Configs_newConfigs(JNIEnv*, jclass);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setMaxAccessThreads
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setMaxAccessThreads(JNIEnv*,
                                                                     jobject,
                                                                     jlong,
                                                                     jlong);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setPMemFileSize
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setPMemFileSize(JNIEnv*,
                                                                 jobject, jlong,
                                                                 jlong);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setPMemSegmentBlocks
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setPMemSegmentBlocks(JNIEnv*,
                                                                      jobject,
                                                                      jlong,
                                                                      jlong);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setHashBucketNum
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setHashBucketNum(JNIEnv*,
                                                                  jobject,
                                                                  jlong, jlong);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setPopulatePMemSpace
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setPopulatePMemSpace(JNIEnv*,
                                                                      jobject,
                                                                      jlong,
                                                                      jboolean);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setEnablePMem
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setEnablePMem(JNIEnv*, jobject,
                                                               jlong, jboolean);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setDestMemoryNodes
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setDestMemoryNodes(JNIEnv*,
                                                                    jobject,
                                                                    jlong,
                                                                    jstring);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setOptLargeSortedCollectionRecovery
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL
Java_io_pmem_kvdk_Configs_setOptLargeSortedCollectionRecovery(JNIEnv*, jobject,
                                                              jlong, jboolean);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setUseDevDaxMode
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setUseDevDaxMode(JNIEnv*,
                                                                  jobject,
                                                                  jlong,
                                                                  jboolean);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    setCleanThreads
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_setCleanThreads(JNIEnv*,
                                                                 jobject, jlong,
                                                                 jlong);

/*
 * Class:     io_pmem_kvdk_Configs
 * Method:    closeInternal
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_pmem_kvdk_Configs_closeInternal(JNIEnv*, jobject,
                                                               jlong);

#ifdef __cplusplus
}
#endif
#endif
